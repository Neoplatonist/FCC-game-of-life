{"version":3,"sources":["redux/actions/index.js","redux/reducers/index.js","redux/store/index.js","components/header/index.js","components/main/components/board/components/cell/index.js","components/main/components/board/index.js","components/main/components/controls/index.js","components/main/utils.js","components/main/index.js","App.js","registerServiceWorker.js","index.js"],"names":["ADD_GENERATION","CHANGE_CELL","CREATE_CELLS","RANDOMIZER","LOCK","UNLOCK","UPDATE_CYCLES","changeCell","cell","dispatch","getState","cycles","gol","slice","type","golState","board","fps","generations","lock","state","arguments","length","undefined","action","Object","objectSpread","middlewares","thunk","Header","react_default","a","createElement","Component","Cell","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClass","className","cycle","handleClick","e","index","class","id","row","col","onClick","connect","Board","renderCells","map","v","k","components_cell","key","Controls","handleStart","console","log","start","handleStep","locked","step","handleStop","unlock","stop","handleClear","clear","handleGen","gen","filter","dims","neighbours","check","count","i","Main","random","randomizer","clearBoard","clearInterval","timer","createCells","rerender","dimensions","updateCycles","startTimer","setInterval","stopTimer","board_Board","controls","j","push","Array","fill","rand","Math","ceil","App","header_Header","main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","render","es","store","createStore","combineReducers","applyMiddleware","apply","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e8b78f6d.chunk.js","sourcesContent":["/**\n * action types\n**/\nexport const ADD_GENERATION = 'ADD_GENERATION'\nexport const CHANGE_CELL = 'CHANGE_CELL'\nexport const CREATE_CELLS = 'CREATE_CELLS'\nexport const RANDOMIZER = 'RANDOMIZER'\nexport const LOCK = 'LOCK'\nexport const UNLOCK = 'UNLOCK'\nexport const UPDATE_CYCLES = 'UPDATE_CYCLES'\n\n\n/**\n * action creators\n**/\nexport function createCells(row, col) {\n  return dispatch => {\n    let board = []\n\n    for (let i = 0; i < row; i++) {\n      for (let j = 0; j < col; j++) {\n        board.push([i, j])\n      }\n    }\n\n    let cycles = new Array(board.length)\n      .fill(0)\n\n    dispatch({\n      type: CREATE_CELLS,\n      board: board,\n      cycles: cycles\n    })\n  }\n}\n\nexport function randomizer(row, col) {\n  return dispatch => {\n    let board = []\n    let cycles = []\n\n    for (let i = 0; i < row; i++) {\n      for (let j = 0; j < col; j++) {\n        board.push([i, j])\n\n        let rand = Math.ceil(Math.random() * 100)\n        rand > 85 || rand < 15 ? cycles.push(1) : cycles.push(0)\n      }\n    }\n\n    dispatch({\n      type: RANDOMIZER,\n      board: board,\n      cycles: cycles\n    })\n  }\n}\n\nexport function updateCycles(cycles) {\n  return (dispatch, getState) => {\n    let gen = getState().gol.generations\n    gen++\n\n    dispatch({\n      type: UPDATE_CYCLES,\n      cycles: cycles,\n      generations: gen\n    })\n  }\n}\n\nexport function changeCell(cell) {\n  return (dispatch, getState) => {\n    let cycles = getState().gol.cycles.slice()\n\n    switch (cycles[cell]) {\n      case 0:\n        // change from empty to alive\n        cycles[cell] = 1\n        break\n      case 1:\n        // change from alive to empty\n        cycles[cell] = 0\n        break\n\n      default:\n        break\n    }\n\n    dispatch({\n      type: CHANGE_CELL,\n      cycles: cycles\n    })\n\n  }\n}\n\nexport function addGeneration() {\n  return (dispatch, getState) => {\n    let generations = getState().gol.generations\n    generations++\n    dispatch({\n      type: ADD_GENERATION,\n      generations: generations\n    })\n  }\n}\n\nexport function lock() {\n  return dispatch => {\n    dispatch({\n      type: LOCK,\n      lock: true\n    })\n\n  }\n}\n\nexport function unlock() {\n  return dispatch => {\n    dispatch({\n      type: UNLOCK,\n      lock: false\n    })\n\n  }\n}\n","import { \n  ADD_GENERATION,\n  CHANGE_CELL,\n  CREATE_CELLS,\n  RANDOMIZER,\n  LOCK,\n  UNLOCK,\n  UPDATE_CYCLES\n} from '../actions'\n\n/**\n * State Initializers\n**/\nexport const golState = {\n  board: [],\n  cycles: [],\n  fps: 120,\n  generations: 0,\n  lock: false\n}\n\n/**\n * Reducers\n**/\n// export default function gol(state = golState, action) {\n//   switch (action.type) {\n//     case ADD_GENERATION:\n//       return Object.assign({}, state, {\n//         generations: action.generations\n//       })\n\n//     case CHANGE_CELL:\n//       return Object.assign({}, state, {\n//         cycles: action.cycles\n//       })\n\n//     case CREATE_CELLS:\n//       return Object.assign({}, state, {\n//         board: action.board,\n//         cycles: action.cycles,\n//         generations: 0\n//       })\n\n//     case RANDOMIZER:\n//       return Object.assign({}, state, {\n//         board: action.board,\n//         cycles: action.cycles\n//       })\n\n//     case LOCK:\n//       return Object.assign({}, state, {\n//         lock: action.lock\n//       })\n\n//     case UNLOCK:\n//       return Object.assign({}, state, {\n//         lock: action.lock\n//       })\n    \n//     case UPDATE_CYCLES:\n//       return Object.assign({}, state, {\n//         cycles: action.cycles,\n//         generations: action.generations\n//       })\n\n//   default:\n//     return state\n//   }\n// }\n\nexport default function gol(state = golState, action) {\n  switch (action.type) {\n    case ADD_GENERATION:\n      return {\n        ...state, \n        generations: action.generations\n      }\n\n    case CHANGE_CELL:\n      return {\n        ...state, \n        cycles: action.cycles\n      }\n\n    case CREATE_CELLS:\n      return {\n        ...state, \n        board: action.board,\n        cycles: action.cycles,\n        generations: 0\n      }\n\n    case RANDOMIZER:\n      return {\n        ...state, \n        board: action.board,\n        cycles: action.cycles\n      }\n\n    case LOCK:\n      return {\n        ...state, \n        lock: action.lock\n      }\n\n    case UNLOCK:\n      return {\n        ...state, \n        lock: action.lock\n      }\n    \n    case UPDATE_CYCLES:\n      return {\n        ...state, \n        cycles: action.cycles,\n        generations: action.generations\n      }\n\n  default:\n    return state\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport gol from '../reducers'\n\n\nconst middlewares = [thunk]\n\nexport default () => {\n  return createStore(\n    combineReducers({\n      gol: gol\n    }),\n    applyMiddleware.apply(null, middlewares)\n  )\n}","import React, {Component} from 'react'\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1>Game of Life</h1>\n      </header>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { changeCell } from '../../../../../../redux/actions'\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      class: 'empty'\n    }\n  }\n\n  handleClass = () => {\n    let className = ''\n\n    switch (this.props.cycle) {\n      case 0:\n        // empty\n        className = 'empty'\n        break\n      case 1:\n        // alive\n        className = 'alive'\n        break\n      case 2:\n        // dead\n        className = 'dead'\n        break\n      case 3:\n        // born\n        className = 'born'\n        break\n    \n      default:\n        break\n    }\n\n    return 'cell-small '+className\n  }\n\n  handleClick = (e) => {\n    if (!this.props.lock) {\n      this.props.changeCell(this.props.index)\n    }\n  }\n\n  render() {\n    return (\n      <div \n        id={this.props.row + '-' + this.props.col}\n        className={this.handleClass()}\n        onClick={this.handleClick}\n      > </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    lock: state.gol.lock\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    changeCell: cell => dispatch(changeCell(cell))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell)","import React, {Component} from 'react'\nimport Cell from './components/cell'\n\nexport default class Board extends Component {\n  renderCells = () => {\n    return this.props.board.map((v, k) => {\n      return (\n        <Cell \n          key={'cell-'+k} \n          index={k}\n          row={v[0]}\n          col={v[1]}\n          cycle={this.props.cycles[k]} />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container-large\">\n        { this.renderCells() }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { lock } from '../../../../redux/actions'\nimport { unlock } from '../../../../redux/actions'\n\nclass Controls extends Component {\n  handleStart = (e) => {\n    console.log(\"You clicked Start\")\n    this.props.lock()\n    this.props.start()\n  }\n\n  handleStep = (e) => {\n    console.log(\"You clicked Step\")\n    if (!this.props.locked) {\n      this.props.step()\n    }\n  }\n\n  handleStop = (e) => {\n    console.log(\"You clicked Stop\")\n    this.props.unlock()\n    this.props.stop()\n  }\n\n  handleClear = (e) => {\n    console.log(\"You clicked Clear\")\n    this.props.unlock()\n    this.props.clear()\n  }\n\n  handleGen = () => {\n    this.props.gen()\n  }\n\n  render() {\n    return (\n      <section id=\"controls\"> \n        <button onClick={this.handleStart}>Start</button>\n        <button onClick={this.handleStep}>Step</button>\n        <button onClick={this.handleStop}>Stop</button>\n        <button onClick={this.handleClear}>Clear</button>\n        <button onClick={this.handleGen}>Generate</button>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    lock: () => dispatch(lock()),\n    unlock: () => dispatch(unlock())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls)","\nexport const filter = function(row, col, dims) {\n  let check = [\n    (row-1)*dims[1] + col-1,\n    (row-1)*dims[1] + col,\n    (row-1)*dims[1] + col+1,\n    (row)*dims[1] + col-1,\n    (row)*dims[1] + col+1,\n    (row+1)*dims[1] + col-1,\n    (row+1)*dims[1] + col,\n    (row+1)*dims[1] + col+1\n  ]\n\n  return check\n}\n\nexport const neighbours = function(check, cycles) {\n  let count = 0\n\n  for (let i = 0; i < check.length; i++) {\n    if (cycles[check[i]] === 1) {\n      count += 1\n    }\n  }\n\n  return count\n}","import React, {Component} from 'react'\nimport Board from './components/board'\nimport Controls from './components/controls'\n\nimport { connect } from 'react-redux'\nimport { \n  // addGeneration, \n  createCells, \n  changeCell,\n  randomizer, \n  updateCycles \n} from '../../redux/actions'\n\nimport { filter, neighbours } from './utils.js'\n\nclass Main extends Component {\n  constructor (props) {\n    super(props)\n\n    this.row = 50\n    this.col = 70\n    // this.row = 30\n    // this.col = 40\n    this.timer = 0\n  }\n\n  componentDidMount() {\n    this.random()\n  }\n\n  random = () => {\n    this.props.randomizer(this.row, this.col)\n  }\n\n  clearBoard = (e) => {\n    clearInterval(this.timer)\n    this.props.createCells(this.row, this.col)\n  }\n\n  rerender = () => {\n    let cycles = this.props.cycles.slice()\n    let dimensions = [this.row, this.col]\n\n    for (let i = 0; i < this.props.board.length; i++) {\n    // for (let i = 0; i < 120; i++) {\n      // let i = 42\n      let check = filter(this.props.board[i][0], this.props.board[i][1], dimensions)\n      let count = neighbours(check, this.props.cycles)\n\n      if (count < 2 && this.props.cycles[i] !== 0) {\n        // die\n        // console.log('less than 2...die')\n        cycles[i] = 0\n      } else if (count > 3 && this.props.cycles[i] !== 0) {\n        // die\n        // console.log('greater than 3...die')\n        cycles[i] = 0\n      } else if (count === 3 && this.props.cycles[i] === 0) {\n        // born\n        cycles[i] = 1\n      }\n    }\n\n    // console.log('finished')\n    this.props.updateCycles(cycles)\n    // this.props.addGeneration()\n  }\n\n  startTimer = () => {\n    this.timer = setInterval(() => {\n      this.rerender()\n    }, 100)\n  }\n\n  stopTimer = () => {\n    clearInterval(this.timer)\n  }\n\n  render() {\n    return (\n      <main>\n        <h2 id=\"generations\">Generations: #{this.props.generations}</h2>\n\n        <Board board={this.props.board} cycles={this.props.cycles}/>\n\n        <Controls \n          clear={this.clearBoard}\n          gen={this.random} \n          locked={this.props.lock}\n          step={this.rerender} \n          start={this.startTimer}\n          stop={this.stopTimer}/>\n      </main>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    board: state.gol.board,\n    cycles: state.gol.cycles,\n    generations: state.gol.generations,\n    lock: state.gol.lock\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    // addGeneration: () => dispatch(addGeneration()),\n    changeCell: cell => dispatch(changeCell(cell)),\n    createCells: (row, col) => dispatch(createCells(row, col)),\n    randomizer: (row, col) => dispatch(randomizer(row, col)),\n    updateCycles: cycles => dispatch(updateCycles(cycles))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)","import React, { Component } from 'react'\nimport Header from './components/header'\nimport Main from './components/main'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <Main />\n      </div>\n    )\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nrender(\n  <Provider store={store()}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n)\nregisterServiceWorker()"],"sourceRoot":""}